{"version":3,"sources":["components/viewer/index.js","services/parser.js","store/selectors.js","components/toolbal/menu-item.js","store/types.js","services/utils.js","components/common/modal/index.js","lib/button/button.js","lib/input/input.js","components/form/add-library/index.js","store/actions/settings-actions.js","components/toolbal/index.js","components/header/index.js","components/editor/index.js","store/actions/code-action.js","store/reducers/code-reducer.js","store/reducers/settings-reducer.js","store/reducers/index.js","store/index.js","components/app.js","serviceWorker.js","index.js"],"names":["Viewer","codeData","renderExpressions","parsedCode","Parser","parse","console","log","formattedExpressions","_","mapValues","expression","result","eval","type","isFunction","name","isBoolean","isString","isNumber","isObject","isArray","map","line","className","data","err","toString","mapStateToProps","state","selectCodeData","connect","OPEN_DELIMITERS","CLOSE_DELIMITERS","DELIMITER_MAP","ParserClass","findDelimiters","lineContents","column","intersection","takeRight","length","code","transformedCode","transform","presets","codeByLine","split","tokenized","tokenize","loc","parens","wasOpen","exp","reduce","expressions","index","value","end","lineNumber","lineHasMoreDelimiters","includes","every","count","take","join","codeReducer","selectSettings","settingsReducer","Option","title","menuIndex","listItemClick","closeMenu","listValue","savedTitleValue","onClickTitle","valueType","noClick","divider","onClick","opt","idx","itm","key","MenuItem","listStyle","useEffect","window","addEventListener","e","target","closest","setVisible","useState","visible","preventDefault","style","op","list","CODE","SETTINGS","utils","libs","Promise","res","errs","total","Array","i","document","getElementById","id","lib","script","createElement","async","onload","onerror","src","getElementsByTagName","appendChild","exists","parentElement","removeChild","Footer","children","Modal","onClose","Button","transparent","filled","link","large","classNames","push","Input","onChange","placeholder","addLibraries","payload","removeLibraries","removeLibrary","mode","libUrl","setLibUrl","href","onRemove","d","pop","Date","toISOString","settings","saveFontSize","saveTabSize","saveWrapLine","fontSize","tabSize","wrapLine","libraries","addLibrary","setAddLibrary","menu","minWidth","mn","location","reload","Header","updateCode","width","wrapEnabled","showPrintMargin","enableSnippets","height","innerHeight","theme","initialState","librariesLoaded","rootReducer","combineReducers","action","filter","persistConfig","storage","persistedReducer","persistReducer","store","applyMiddleware","createStore","createStoreWithMiddleware","persistor","persistStore","AppRootComponent","updateLoadLibraryFlag","initLibraries","a","loadLibraries","minSize","defaultSize","innerWidth","App","loading","Boolean","hostname","match","root","querySelector","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3aa3b202.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport './styles/viewer.sass';\nimport { connect } from 'react-redux';\nimport { selectCodeData } from '../../store/selectors';\nimport { Parser } from '../../services/parser';\nimport _ from 'lodash';\nimport {ObjectInspector, TableInspector} from 'react-inspector';\nconst Viewer = ({\n    codeData,\n}) => {\n    const renderExpressions = () => {\n        try {\n            const parsedCode = Parser.parse(codeData);\n            console.log('parsedCode', parsedCode)\n            const formattedExpressions = _.mapValues(parsedCode, expression => {\n                const result = eval(expression);\n                console.log(result);\n                if (result && result.type) {\n                  return {result};\n                } else if (_.isFunction(result) && result.name) {\n                  return {\n                      result: result,\n                      type: 'function',\n                    };\n                } else if (_.isBoolean(result)) {\n                  return {\n                      result: result ? 'true' : 'false',\n                      type: 'boolean',\n                  }\n                } else if(_.isString(result)){\n                    return {\n                        result,\n                        type: 'string'\n                    }\n                } else if(_.isNumber(result)){\n                    return {\n                        result,\n                        type: 'number'\n                    }\n                } else if (_.isObject(result) || _.isArray(result)) {\n                  return {\n                      type: 'object',\n                      result\n                    };\n                }\n                \n                return result;\n              });\n              console.log(formattedExpressions);\n              return _.map(formattedExpressions, (expression, line) =>\n                expression && expression.result ? \n                    <div className={\"log-item\"}>\n                        <ObjectInspector data={expression.result} />\n                    </div> : null\n              );\n        } catch(err) {\n            return <div className={'log-item err'}>{err.toString()}</div>\n        }\n    }\n    return (\n        <div className=\"viewer\">\n            {renderExpressions()}\n        </div>\n    )\n};\n\nconst mapStateToProps = state => ({\n    codeData: selectCodeData(state),\n});\n\nexport default connect(\n    mapStateToProps,\n)(Viewer);\n\n","import {transform} from '@babel/standalone';\nimport {tokenize} from 'esprima';\nimport _ from 'lodash';\n\nconst OPEN_DELIMITERS = [ '(', '{', '[', '`' ];\nconst CLOSE_DELIMITERS = [ ')', '}', ']', '`' ];\nconst DELIMITER_MAP = {\n  ')': '(',\n  '}': '{',\n  ']': '[',\n  '`': '`'\n};\n\nclass ParserClass {\n    findDelimiters = ({ column }, lineContents) =>\n        _.intersection(_.takeRight(lineContents, lineContents.length - column), OPEN_DELIMITERS).length\n    parse(code) {\n        const transformedCode = transform(code, { presets: ['react']}).code;\n        const codeByLine = transformedCode.split('\\n');\n        const tokenized = tokenize(transformedCode, { loc: true });\n        const parens = { '(': 0, '{': 0, '[': 0 };\n        let wasOpen = false;\n        const exp = _.reduce(tokenized, (expressions, { value, loc: { end } }, index) => {\n            const lineNumber = end.line;\n            const lineContents = codeByLine[lineNumber - 1];\n            const lineHasMoreDelimiters = this.findDelimiters(end, lineContents);\n            const endOfLine = end.column === lineContents.length;\n\n            if (expressions[lineNumber]) { return expressions; }\n\n            if (OPEN_DELIMITERS.includes(value)) {\n            parens[value] += 1;\n            wasOpen = true;\n            }\n\n            if (CLOSE_DELIMITERS.includes(value)) {\n            parens[DELIMITER_MAP[value]] -= 1;\n            }\n\n            if (!lineHasMoreDelimiters && wasOpen && _.every(parens, count => count === 0)) {\n            wasOpen = false;\n            expressions[lineNumber] = _.take(codeByLine, lineNumber).join('\\n');\n\n            return expressions;\n            }\n\n            if (!lineHasMoreDelimiters && _.every(parens, count => count === 0)) {\n            expressions[lineNumber] = _.take(codeByLine, lineNumber).join('\\n');\n\n            return expressions;\n            }\n\n            return expressions;\n        }, {});\n\n        eval(transformedCode);\n        return exp;\n    }\n}\n\nexport const Parser = new ParserClass();","export const selectCodeData = state => state.codeReducer.code;  \n\nexport const selectSettings = state => state.settingsReducer;","import React, { useEffect, useState } from 'react';\n\nconst MenuItem = ({\n    index,\n    title,\n    data,\n    listStyle,\n}) => {\n    useEffect(() => {\n        window.addEventListener('click', e => {\n            const a = e.target.closest('.index-' + index);\n            if(!a) {\n                setVisible(false);\n            }\n        })\n    }, []);\n    const [visible, setVisible] = useState(false);\n    const showMenu = e => {\n        e.preventDefault();\n        // e.stopPropagation();\n        if(data && data.length > 0) {\n            setVisible(!visible);\n        }   \n    }\n    return (\n        <div className={\"menu-itm \" + (visible ? 'visible' : '') + ' index-' + index} >\n            <div \n                className={\"menu-ttl\"}\n                onClick={showMenu}>\n                    {title}\n            </div>\n            {visible && data && data.length > 0 && (\n                <div className=\"menu-opt\" style={listStyle ? listStyle : {}}>\n                    {data.map((op, idx) =>\n                        <Option \n                            title={op.title}\n                            data={op.list}\n                            closeMenu={() => setVisible(false)}\n                            listValue={op.listValue}\n                            savedTitleValue={op.savedTitleValue}\n                            value={op.value}\n                            valueType={op.valueType}\n                            onClickTitle={op.onClick}\n                            listItemClick={op.listItemClick}\n                            menuIndex={index}\n                            noClick={op.noClick}\n                            divider={op.divider}\n                            key={'opt-tllbr-menu-' + idx + index}/>\n                    )}\n                </div>\n            )}\n        </div>\n    )\n    \n};\n\n\nconst Option = ({\n    data,\n    title,\n    menuIndex,\n    listItemClick,\n    closeMenu,\n    listValue,\n    savedTitleValue,\n    onClickTitle,\n    value,\n    valueType,\n    noClick,\n    divider,\n}) => {\n    const onClick = itm => {\n        if(listItemClick) {\n            listItemClick(itm.value ? itm.value : null);\n            if(closeMenu) {\n                closeMenu();\n            }\n        }\n    }\n    const onTitleTitle = () => {\n        if(onClickTitle) {\n            onClickTitle(value);\n            closeMenu();\n        }\n    }\n    return ( \n        divider ? \n        <div className=\"list-divider\" /> :\n        <div className=\"opt\">\n            <div \n                onClick={noClick ? null : onTitleTitle}\n                className={\n                    \"opt-ttl \" + \n                    (data && data.length > 0 ? ' has-list ' : '') + \n                    (valueType === 'boolean' && savedTitleValue ? ' selected ' : '') + \n                    (noClick ? ' noClick ' : '') + \n                    (savedTitleValue && value === savedTitleValue ? ' selected ' : '')\n                }>{title}</div>\n            {data && (\n                <div className=\"opt-list\">\n                    {data.map((opt, idx) => \n                        <div \n                            onClick={() => onClick(opt)}\n                            className={\"opt-list-item \" + (listValue && opt.value === listValue ? 'selected' : '')}\n                            key={'tll-menu-' + menuIndex + idx}>\n                            {opt.title}\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default MenuItem;","// code types\nconst UPDATE_CODE = 'UPDATE_CODE';\n\nconst CODE = {UPDATE_CODE};\n\n\n// settings type\nconst FONT_SIZE = 'FONT_SIZE';\nconst TAB_SIZE = 'TAB_SIZE';\nconst WRAP_LINE = 'WRAP_LINE';\nconst ADD_LIBRARIES = 'ADD_LIBRARIES';\nconst REMOVE_LIBRARIES = 'REMOVE_LIBRARIES';\nconst UPDATE_LOAD_LIBRARY_FLAG = 'UPDATE_LOAD_LIBRARY_FLAG';\n\nconst SETTINGS = {\n    FONT_SIZE, \n    TAB_SIZE, \n    WRAP_LINE, \n    ADD_LIBRARIES, \n    REMOVE_LIBRARIES, \n    UPDATE_LOAD_LIBRARY_FLAG\n}\n\nexport {CODE, SETTINGS};","class UtilsClass {\n    loadLibraries(libs) { //return (total, loaded)\n        return new Promise((res) => {\n            let errs = 0;\n            let total = 0;\n            if(libs && Array.isArray(libs)) {\n                for(let i=0; i<libs.length; i++) {\n                    const exists = document.getElementById(libs[i].id);\n                    if(!exists) {\n                        const lib = libs[i];\n                        const script = document.createElement('script');\n                        script.type = 'text/javascript';\n                        script.async = true;\n                        script.id = lib.id;\n                        script.onload = () => {\n                            total += 1;\n                            if(total === libs.length) {\n                                res({total, errs});\n                            }\n                        };\n                        script.onerror = () => {\n                            total += 1;\n                            errs =+ 1;\n                            if(total === libs.length) {\n                                res({total, errs});\n                            }\n                        };\n                        script.src = lib.src;\n                        document.getElementsByTagName('head')[0].appendChild(script);\n                    } else {\n                        total += 1;\n                        if(total === libs.length) {\n                            res({total, errs});\n                        }\n                    }\n                    \n                } \n            } else {\n                res({total: 0, errs: 0});\n            }\n        });\n    }\n    removeLibrary(lib) {\n        const exists = document.getElementById(lib.id);\n        if(exists) {\n            exists.parentElement.removeChild(exists);\n        }\n    }\n}\nexport const utils = new UtilsClass;","import React from 'react';\nimport './modal.sass';\n\nconst Modal = ({\n    onClose,\n    title,\n    children\n}) => {\n    return (\n        <div className=\"app-modal\">\n            <div className=\"back-drop\"/>\n            <div className=\"modal-content\">\n                {title && (\n                    <div className=\"modal-ttl\">\n                        <div className=\"ttl\">{title}</div>\n                        <div \n                            className=\"close\" \n                            onClick={onClose}/>\n                    </div>\n                )}\n                <div className=\"modal-body\">\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst Footer = ({\n    children\n}) => (\n    <div className=\"modal-footer\">{children}</div>\n);\nexport {Footer}\n\nexport default Modal;","import React from 'react';\nimport './button.sass';\n\nexport const Button = ({\n    children,\n    transparent,\n    filled,\n    link,\n    onClick,\n    large,\n}) => {\n    const classNames = ['app-btn'];\n    if(transparent) classNames.push('transparent');\n    if(filled) classNames.push('filled');\n    if(link) classNames.push('link');\n    if(large) classNames.push('large');\n    return (\n        <button \n            className={classNames.join(' ')} \n            onClick={onClick ? onClick : null}>\n                {children}\n        </button>\n    );\n};","import React from 'react';\nimport './input.sass';\n\nconst Input = ({\n    value,\n    onChange,\n    placeholder,\n}) => {\n    return (\n        <input \n            className=\"app-input\" \n            onChange={onChange ? onChange : null} \n            placeholder={placeholder}\n            value={value}/>\n    )\n}\n\nexport default Input;","import React, { useState } from 'react';\nimport './add-lib.sass';\nimport Modal, { Footer } from '../../common/modal';\nimport { Button, Input } from './../../../lib';\nimport { connect } from 'react-redux';\nimport { addLibraries, removeLibraries } from '../../../store/actions/settings-actions';\n\nconst AddLibrary = ({\n    mode,\n    data,\n    addLibraries,\n    onClose,\n    removeLibraries,\n}) => {\n    const [libUrl, setLibUrl] = useState('');\n    const onAdd = () => {\n        const d = {\n            name: libUrl.split('/').pop(),\n            src: libUrl,\n            id: new Date().toISOString(),\n        };\n        if(libUrl && libUrl.length > 0) {\n            addLibraries(d);\n            onClose();\n        }\n        \n    }\n    const onRemove = lib => {\n        if(removeLibraries) {\n            removeLibraries(lib);\n        }\n    }\n    return (\n        <Modal \n            title={`${mode === 'add' ? 'Add' : 'Manage'} Library`} \n            onClose={onClose}>\n            {mode === 'add' ? (\n                <div>\n                    <Input \n                        onChange={(e) => setLibUrl(e.target.value)} \n                        value={libUrl}\n                        placeholder={'http://'}/>\n                </div>\n            ) : (\n                <div className=\"manage-lib\">\n                    {data && data.map((lib, idx) =>\n                        <div className=\"lib-item\" key={lib.id}>\n                            <div className=\"idx\">{idx + 1}</div>\n                            <div className=\"name\">{lib.name}</div>\n                            <a className=\"link\" href={lib.src} target=\"_blank\">{lib.src}</a>\n                            <div className=\"actions\">\n                                <Button onClick={() => onRemove(lib)}>Delete</Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            )}\n            \n            {mode === 'add' && (\n                <Footer>\n                    <Button filled onClick={onAdd}>Add Library</Button>\n                </Footer>\n            )}\n        </Modal>\n    )\n}\nexport default connect(\n    null,\n    {addLibraries, removeLibraries},\n)(AddLibrary);","import { SETTINGS } from \"../types\";\nimport { utils } from \"../../services/utils\";\n\nexport const saveFontSize = data => {\n    return {\n        type: SETTINGS.FONT_SIZE,\n        payload: data,\n    }\n}\n\nexport const saveTabSize = data => {\n    return {\n        type: SETTINGS.TAB_SIZE,\n        payload: data,\n    }\n}\n\nexport const saveWrapLine = data => {\n    return {\n        type: SETTINGS.WRAP_LINE,\n        payload: data,\n    }\n}\n\nexport const addLibraries = data => {\n    return {\n        type: SETTINGS.ADD_LIBRARIES,\n        payload: data,\n    }\n}\n\nexport const removeLibraries = data => {\n    utils.removeLibrary(data);\n    return {\n        type: SETTINGS.REMOVE_LIBRARIES,\n        payload: data,\n    }\n}\n\nexport const updateLoadLibraryFlag = data => {\n    return {\n        type: SETTINGS.UPDATE_LOAD_LIBRARY_FLAG,\n        payload: data,\n    }\n}","import React, { useState } from 'react';\nimport './styles/toolbar.sass';\nimport MenuItem from './menu-item';\nimport { saveFontSize, saveTabSize, saveWrapLine } from '../../store/actions/settings-actions';\nimport { connect } from 'react-redux';\nimport { selectSettings } from '../../store/selectors';\nimport AddLibrary from '../form/add-library';\nconst Toolbar = ({\n    saveFontSize,\n    saveTabSize,\n    settings: {\n        fontSize,\n        tabSize,\n        wrapLine,\n        libraries = [],\n    },\n    saveWrapLine,\n}) => {\n    const [addLibrary, setAddLibrary] = useState(false);\n    const closeAddLibrary = () => {\n        if(addLibrary === 'manage') window.location.reload();\n        setAddLibrary(false);\n    }\n    const bindLibaries = () => {\n        if(libraries.length > 0) {\n            return libraries.map((itm) => {\n                const d = {\n                    title: itm.name,\n                    noClick: true\n                }\n                return d;\n            });\n        }\n        return [];\n    }\n    const menu = [\n        {\n            title: 'Format',\n            list: [\n                {\n                    title: 'Font Size',\n                    listItemClick: saveFontSize,\n                    listValue: fontSize,\n                    list: [\n                        {title: '10', value: 10},\n                        {title: '11', value: 11},\n                        {title: '12', value: 12},\n                        {title: '13', value: 13},\n                        {title: '14', value: 14},\n                        {title: '15', value: 15},\n                        {title: '16', value: 16},\n                        {title: '17', value: 17},\n                        {title: '18', value: 18},\n                        {title: '19', value: 19},\n                        {title: '20', value: 20},\n                        {title: '21', value: 21},\n                    ]\n                },\n                {\n                    title: 'Tab Size',\n                    listItemClick: saveTabSize,\n                    listValue: tabSize,\n                    list: [\n                        {title: '2', value: 2},\n                        {title: '4', value: 4},\n                        {title: '6', value: 6},\n                    ]\n                },\n                {\n                    title: 'Wrap Line',\n                    savedTitleValue: wrapLine,\n                    value: !wrapLine,\n                    valueType: 'boolean',\n                    onClick: saveWrapLine,\n                }\n            ]\n        },\n        {\n            title: 'Libraries',\n            listStyle: {minWidth: 210},\n            list: [\n                {\n                    onClick: () => setAddLibrary('add'),\n                    value: true,\n                    title: 'Load Library',\n                },\n                {\n                    onClick: () => setAddLibrary('manage'),\n                    value: true,\n                    title: 'Manage Libraries',\n                },\n                {divider: true},\n                ...bindLibaries(),\n            ]\n        }\n    ]\n    return (\n        <div className=\"h-toolbar\">\n            {menu.map((mn, idx) =>\n                <MenuItem  \n                    title={mn.title} \n                    listStyle={mn.listStyle}\n                    index={idx} \n                    data={mn.list}\n                    key={'tll-br-' + idx}/>\n            )}\n            {addLibrary && (\n                <AddLibrary \n                    data={libraries}\n                    mode={addLibrary}\n                    onClose={() => closeAddLibrary()}/>\n            )}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    settings: selectSettings(state),\n});\n\nexport default connect(\n    mapStateToProps,\n    {saveFontSize, saveTabSize, saveWrapLine},\n)(Toolbar);","import React from 'react';\nimport './styles/header.sass';\nimport Toolbar from '../toolbal';\nconst Header = () => {\n    return (\n        <div className=\"app-header\">\n            <div className=\"app-header-c\">\n                <div className=\"l\">\n                    <div className=\"logo\">\n                        <span className=\"j\">J</span><span className=\"s\">S</span>\n                    </div>\n                    <div className=\"l-content\">\n                        <div className=\"l-top\">\n                            <div className=\"title\">Practise<span className=\"j\">J</span><span className=\"s\">S</span></div>\n                        </div>\n                        <div className=\"l-toolbar\">\n                            <Toolbar />\n                        </div>\n                    </div>\n                    \n                </div>\n                <div className=\"r\"></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-xcode\";\nimport \"ace-builds/src-noconflict/ext-language_tools\"\nimport { connect } from 'react-redux';\nimport { updateCode } from '../../store/actions/code-action';\nimport { selectCodeData, selectSettings } from '../../store/selectors';\n\nconst Editor = ({\n    codeData,\n    updateCode,\n    settings,\n}) => (\n    <div>\n        <AceEditor \n            width={'100%'}\n            wrapEnabled={settings.wrapLine}\n            value={codeData}\n            onChange={updateCode}\n            showPrintMargin={false}\n            fontSize={settings.fontSize}\n            tabSize={settings.tabSize}\n            enableSnippets={true}\n            height={window.innerHeight - 62}\n            mode={'javascript'} \n            theme={'xcode'} />\n    </div>\n)\n\nconst mapStateToProps = state => ({\n    codeData: selectCodeData(state),\n    settings: selectSettings(state),\n});\nexport default connect(\n    mapStateToProps,\n    {updateCode},\n)(Editor);","import { CODE } from \"../types\";\n\nexport const updateCode = code => {\n    // console.clear();\n    return {\n        type: CODE.UPDATE_CODE,\n        payload: code,\n    }\n}","import { CODE } from \"../types\";\n\nconst initialState = {\n    code: '',\n}\nexport default function (state = initialState, action) {\n    switch(action.type) {\n        case CODE.UPDATE_CODE:\n            return {\n                ...state,\n                code: action.payload,\n            }\n        default:\n            return state;\n    }\n}","import { SETTINGS } from \"../types\";\n\nconst initialState = {\n    fontSize: 14,\n    tabSize: 4,\n    wrapLine: false,\n    libraries: [],\n    librariesLoaded: false,\n}\nexport default function (state = initialState, action) {\n    switch(action.type) {\n        case SETTINGS.FONT_SIZE:\n            return {\n                ...state,\n                fontSize: action.payload,\n            }\n        case SETTINGS.TAB_SIZE:\n            return {\n                ...state,\n                tabSize: action.payload,\n            }\n        case SETTINGS.WRAP_LINE:\n            return {\n                ...state,\n                wrapLine: action.payload,\n            }\n        case SETTINGS.ADD_LIBRARIES:\n            const lib = state.libraries ? state.libraries : [];\n            return {\n                ...state,\n                libraries: [...lib, action.payload],\n            }\n        case SETTINGS.REMOVE_LIBRARIES:\n            return {\n                ...state,\n                libraries: state.libraries.filter(i => i.id !== action.payload.id),\n            }\n        case SETTINGS.UPDATE_LOAD_LIBRARY_FLAG:\n            return {\n                ...state,\n                librariesLoaded: action.payload,\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport codeReducer from \"./code-reducer\";\nimport settingsReducer from \"./settings-reducer\";\n\nconst rootReducer = combineReducers({\n    codeReducer,\n    settingsReducer,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer } from 'redux-persist';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst createStoreWithMiddleware = applyMiddleware()(createStore);\n\nconst store = createStoreWithMiddleware(persistedReducer);\nconst persistor = persistStore(store);\nexport {store, persistor};","import React, { useEffect } from 'react';\nimport Header from './header';\nimport SplitPane from 'react-split-pane';\nimport Editor from './editor';\nimport { Provider, connect } from 'react-redux';\nimport { store, persistor } from '../store';\nimport Viewer from './viewer';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { selectSettings } from '../store/selectors';\nimport { utils } from '../services/utils';\nimport { updateLoadLibraryFlag } from '../store/actions/settings-actions';\n\nconst AppRoot = ({\n    updateLoadLibraryFlag,\n    settings: {\n        librariesLoaded,\n        libraries,\n    },\n}) => {\n    useEffect(() => {\n        initLibraries(); \n    }, [libraries]);\n\n    // useEffect(() => {\n    //     initLibraries()\n    // }, []);\n\n    const initLibraries = async () => {\n        if(libraries && libraries.length > 0) {\n            console.log('loading');\n            updateLoadLibraryFlag(false);\n            const res = await utils.loadLibraries(libraries);\n            console.log('loaded');\n            updateLoadLibraryFlag(true);\n        } else {\n            updateLoadLibraryFlag(true);\n        } \n    }\n    // const [loaded, setLoaded] = useState(false);\n\n    return (\n        <div className=\"app-root\">\n            <Header />\n            <div className=\"app-content\">\n                <SplitPane \n                    split=\"vertical\" \n                    minSize={300} \n                    defaultSize={window.innerWidth / 2}>\n                    <div>\n                        <Editor />\n                    </div>\n                    <div>\n                        {librariesLoaded && (\n                            <Viewer />\n                        )}\n                    </div>\n                </SplitPane>\n            </div>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    settings: selectSettings(state),\n});\n\nconst AppRootComponent = connect(\n    mapStateToProps,\n    {updateLoadLibraryFlag},\n)(AppRoot);\n\n\n\nconst App = () => (\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <AppRootComponent />\n        </PersistGate>\n    </Provider>\n)\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass'; // styles in sass\nimport './styles/styles.css'; //containes styles in css format\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nconst root = document.querySelector('[practise-js]');\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}